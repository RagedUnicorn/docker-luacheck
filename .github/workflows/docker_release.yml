name: Release Build

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build test image
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: ragedunicorn/luacheck:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run Container Structure Tests
        env:
          LUACHECK_VERSION: test
        run: |
          echo "::notice title=ðŸ§ª Running Tests::Validating Docker image before release..."
          docker pull ragedunicorn/container-test:latest

          echo "::group::Running all Container Structure Tests"
          docker compose -f docker-compose.test.yml run --rm test-all
          echo "::endgroup::"

          echo "::notice title=âœ… Tests Passed::All Container Structure Tests completed successfully!"

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            ${{ secrets.DOCKERHUB_USERNAME }}/luacheck
          tags: |
            # Strip 'v' prefix from git tag for Docker tag
            type=semver,pattern={{version}}
            # Also create Luacheck version tag if git tag matches pattern
            type=semver,pattern={{major}}.{{minor}}.{{patch}},enable=${{ contains(github.ref_name, 'alpine') }}
            # 'latest' tag for version tags
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
